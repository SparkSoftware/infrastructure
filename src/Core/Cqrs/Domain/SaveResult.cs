using Spark.EventStore;

/* Copyright (c) 2015 Spark Software Ltd.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, 
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

namespace Spark.Cqrs.Domain
{
    /// <summary>
    /// The resulting <see cref="Aggregate"/> and <see cref="Commit"/> after successfully invoking <see cref="IStoreAggregates.Save"/>.
    /// </summary>
    public sealed class SaveResult
    {
        /// <summary>
        /// The modified <see cref="Aggregate"/> resulting from invoking <see cref="IStoreAggregates.Save"/>.
        /// </summary>
        public Aggregate Aggregate { get; private set; }

        /// <summary>
        /// The <see cref="Commit"/> generated by invoking <see cref="IStoreAggregates.Save"/>.
        /// </summary>
        public Commit Commit { get; private set; }

        /// <summary>
        /// Initializes a new instance of <see cref="SaveResult"/>.
        /// </summary>
        /// <param name="aggregate">The saved <see cref="Aggregate"/>.</param>
        /// <param name="commit">The generated <see cref="Commit"/></param>
        public SaveResult(Aggregate aggregate, Commit commit)
        {
            Verify.NotNull(aggregate, nameof(aggregate));
            Verify.NotNull(commit, nameof(commit));

            Aggregate = aggregate;
            Commit = commit;
        }
    }
}
