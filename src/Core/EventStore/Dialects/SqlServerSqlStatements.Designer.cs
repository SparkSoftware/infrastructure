//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spark.Infrastructure.EventStore.Dialects {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SqlServerSqlStatements {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlServerSqlStatements() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Spark.Infrastructure.EventStore.Dialects.SqlServerSqlStatements", typeof(SqlServerSqlStatements).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [dbo].[Commit] WHERE [StreamId] = @streamId;.
        /// </summary>
        internal static string DeleteStream {
            get {
                return ResourceManager.GetString("DeleteStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = &apos;dbo&apos; AND TABLE_NAME = &apos;Commit&apos;)
        ///BEGIN
        ///    CREATE TABLE [dbo].[Commit] (
        ///        [StreamId]  UNIQUEIDENTIFIER NOT NULL,
        ///        [Version]   INT              NOT NULL,
        ///        [Timestamp] DATETIME2        NOT NULL,
        ///        [CommitId]  UNIQUEIDENTIFIER NOT NULL,
        ///        [Headers]   VARBINARY(MAX)   NOT NULL,
        ///        [Events]    VARBINARY(MAX)   NOT NULL,
        ///     
        ///        CONSTRAINT [PK_Commit] PRIMARY KEY CLUSTERED ([StreamId], [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string EnsureCommitTableCreated {
            get {
                return ResourceManager.GetString("EnsureCommitTableCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = &apos;dbo&apos; AND TABLE_NAME = &apos;Snapshot&apos;)
        ///BEGIN
        ///    CREATE TABLE [dbo].[Snapshot] (
        ///        [StreamId]  UNIQUEIDENTIFIER NOT NULL,
        ///        [Version]   INT              NOT NULL,
        ///        [State]     VARBINARY(MAX)   NOT NULL,
        ///     
        ///        CONSTRAINT [PK_Snapshot] PRIMARY KEY CLUSTERED ([StreamId],[Version])
        ///    );
        ///END;.
        /// </summary>
        internal static string EnsureSnapshotTableCreated {
            get {
                return ResourceManager.GetString("EnsureSnapshotTableCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     SELECT [StreamId], [Version], [Timestamp], [CommitId], [Headers], [Events] 
        ///  FROM (SELECT *, RANK() OVER(ORDER BY [Timestamp], [CommitId]) &apos;Rank&apos;
        ///          FROM [dbo].[Commit]
        ///         WHERE [Timestamp] &gt;= @timestamp
        ///       ) [Commit]
        /// WHERE [RANK] BETWEEN (@skip + 1) AND (@skip + @take).
        /// </summary>
        internal static string GetCommitsFrom {
            get {
                return ResourceManager.GetString("GetCommitsFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT TOP(1) [StreamId],[Version],[State] FROM [dbo].[Snapshot] WHERE [StreamId] = @streamId AND [Version] &lt;= @version ORDER BY [Version] DESC;.
        /// </summary>
        internal static string GetSnapshot {
            get {
                return ResourceManager.GetString("GetSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     SELECT [StreamId], [Version], [Timestamp], [CommitId], [Headers], [Events] 
        ///  FROM (SELECT *, RANK() OVER(ORDER BY [Version]) &apos;Rank&apos;
        ///          FROM [dbo].[Commit]
        ///         WHERE [StreamId] = @streamId
        ///           AND [Version] &gt;= @version
        ///       ) [Commit]
        /// WHERE [RANK] BETWEEN (@skip + 1) AND (@skip + @take).
        /// </summary>
        internal static string GetStreamFrom {
            get {
                return ResourceManager.GetString("GetStreamFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[Commit] ([StreamId], [Version], [Timestamp], [CommitId], [Headers], [Events]) VALUES(@streamId, @version, @timestamp, @commitId, @headers, @events);.
        /// </summary>
        internal static string InsertCommit {
            get {
                return ResourceManager.GetString("InsertCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[Snapshot] ([StreamId],[Version],[State]) VALUES(@streamId, @version, @state);.
        /// </summary>
        internal static string InsertSnapshot {
            get {
                return ResourceManager.GetString("InsertSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [dbo].[Commit];.
        /// </summary>
        internal static string PurgeCommits {
            get {
                return ResourceManager.GetString("PurgeCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DELETE FROM [dbo].[Snapshot];.
        /// </summary>
        internal static string PurgeSnapshots {
            get {
                return ResourceManager.GetString("PurgeSnapshots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO [dbo].[Snapshot] ([StreamId],[Version],[State]) VALUES(@streamId, @version, @state); DELETE FROM [dbo].[Snapshot] WHERE [StreamId] = @streamId AND [Version] &lt; @version;.
        /// </summary>
        internal static string ReplaceSnapshot {
            get {
                return ResourceManager.GetString("ReplaceSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPDATE [dbo].[Commit] SET [Headers] = @headers, [Events] = @events WHERE [CommitId] = @commitId;.
        /// </summary>
        internal static string UpdateCommit {
            get {
                return ResourceManager.GetString("UpdateCommit", resourceCulture);
            }
        }
    }
}
