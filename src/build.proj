<Project ToolsVersion="12.0" DefaultTargets="Test" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask AssemblyFile="packages\xunit.runner.msbuild.2.0.0\build\portable-net45+win+wpa81+wp80+monotouch+monoandroid+Xamarin.iOS\xunit.runner.msbuild.dll" TaskName="Xunit.Runner.MSBuild.xunit"/>

  <!--
  * Build Configuration Properies
  **************************************************
  -->
  <PropertyGroup>
    <SolutionDir>$(MSBuildProjectDirectory)</SolutionDir>
    <Platform Condition="'$(Platform)' == ''">Any CPU</Platform>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <MajorVersion Condition="'$(MajorVersion)' == ''">0</MajorVersion>
    <MinorVersion Condition="'$(MinorVersion)' == ''">0</MinorVersion>
    <RevisionNumber Condition="'$(RevisionNumber)' == ''">0</RevisionNumber>
    <BuildOutput Condition="'$(BuildOutput)' == ''">$(SolutionDir)\..\bin</BuildOutput>
    <NuGetDir>$(SolutionDir)\.nuget</NuGetDir>
    <NuGetExe>$(NuGetDir)\nuget.exe</NuGetExe>
  </PropertyGroup>

  <!--
  * Clean
  * Remove any output from previous builds.
  **************************************************
  -->
  <Target Name="Clean">
    <ItemGroup>
      <CleanFiles Include="**\bin\$(Configuration)\**" Exclude="**\bin\$(Configuration)\*.vshost.exe" />
      <CleanFiles Include="**\obj\$(Configuration)\**" />
      <CleanFiles Include="$(BuildOutput)\**" />
    </ItemGroup>

    <Delete Files="@(CleanFiles)" TreatErrorsAsWarnings="true" />
    <RemoveDir Directories="$(BuildOutput)"/>
    <MakeDir Directories="$(BuildOutput)" />
  </Target>

  <!--
  * CreateFileVersion
  * Generates build date and time parameters.
  **************************************************
  -->
  <UsingTask TaskName="CreateFileVersion" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll">
    <ParameterGroup>
      <BuildDate ParameterType="System.String" Output="true" />
      <BuildTime ParameterType="System.String" Output="true" />
    </ParameterGroup>
    <Task>
      <Code Type="Fragment" Language="cs">
        <![CDATA[ 
          var now = DateTime.Now;
          BuildDate = Convert.ToInt32(now.Date.Subtract(new DateTime(2012, 11, 18)).TotalDays).ToString();
          BuildTime = Convert.ToInt32(now.Subtract(now.Date).TotalMinutes).ToString();
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <!--
  * StampVersionInfo
  * Generates VersionInfo.cs based on the build date.
  **************************************************
  -->
  <Target Name="StampVersionInfo" DependsOnTargets="Clean">
    <CreateFileVersion>
      <Output TaskParameter="BuildDate" PropertyName="BuildDate" />
      <Output TaskParameter="BuildTime" PropertyName="BuildTime" />
    </CreateFileVersion>

    <CreateProperty Value="$(MajorVersion).$(MinorVersion).$(RevisionNumber).0">
      <Output TaskParameter="Value" PropertyName="AssemblyVersion" />
    </CreateProperty>

    <CreateProperty Value="$(MajorVersion).$(MinorVersion).$(BuildDate).$(BuildTime)">
      <Output TaskParameter="Value" PropertyName="FileVersion" />
    </CreateProperty>

    <WriteLinesToFile File=".shared/VersionInfo.cs" Overwrite="true" Lines="using System.Reflection%3b;;[assembly: AssemblyVersion(&quot;$(AssemblyVersion)&quot;)];[assembly: AssemblyFileVersion(&quot;$(FileVersion)&quot;)];[assembly: AssemblyConfiguration(&quot;$(Configuration)&quot;)];" />
  </Target>

  <!--
  * Compile
  * Rebuild the project solution.
  **************************************************
  -->
  <Target Name="Compile" DependsOnTargets="StampVersionInfo">
    <MSBuild Projects=".nuget\NuGet.Targets" Targets="RestorePackages" Properties="SolutionDir=$(MSBuildProjectDirectory);ProjectDir=$(NuGetDir);DownloadNuGetExe=true;RequireRestoreConsent=false;" />
    <MSBuild Projects="Infrastructure.sln" Targets="Build" Properties="Configuration=$(Configuration);Platform=$(Platform)" />
  </Target>

  <!--
  * Test
  * Run all xUnit tests in project solution.
  **************************************************
  -->
  <Target Name="Test" DependsOnTargets="Compile">
    <ItemGroup>
      <TestAssemblies Include="**\bin\$(Configuration)\*.Tests.dll" />
      <TestAssemblies Include="**\bin\*.Tests.dll" />
    </ItemGroup>

    <xunit Assemblies="@(TestAssemblies)" />
  </Target>

  <!--
  * Test
  * Run all xUnit tests in project solution.
  **************************************************
  -->
  <Target Name="Test" DependsOnTargets="Compile">
    <ItemGroup>
      <TestAssemblies Include="**\bin\$(Configuration)\*.Tests.dll" />
      <TestAssemblies Include="**\bin\*.Tests.dll" />
    </ItemGroup>

    <xunit Assemblies="@(TestAssemblies)" />
  </Target>

  <!--
  * Package
  * Package build output for official releases.
  **************************************************
  -->
  <Target Name="Package" DependsOnTargets="Test">
    <ItemGroup>
      <BinaryFiles Include="$(SolutionDir)\Core\bin\$(Configuration)\Spark.Core.*" />
      <BinaryFiles Include="$(SolutionDir)\Serialization.Newtonsoft\bin\$(Configuration)\Spark.Serialization.Newtonsoft.*" />
    </ItemGroup>
    <Copy SourceFiles="@(BinaryFiles)" DestinationFolder="$(BuildOutput)" />

    <ItemGroup>
      <Package Include="Core" />
      <Package Include="Serialization.Newtonsoft" />
    </ItemGroup>
    <Exec Command="$(NuGetExe) pack %(Package.Identity)\%(Package.Identity).csproj -OutputDirectory $(BuildOutput)" />
  </Target>

</Project>
